// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String
  surname       String
  photo         String?
  email         String
  password      String
  phone         String
  checked       Boolean?
  validation_id String?   @unique @default(uuid())
  created_at    DateTime? @default(now())
  updated_at    DateTime? @updatedAt
  Wallets       Wallet[]

  @@map("user")
}

model Wallet {
  id      String  @id @default(uuid())
  name    String
  value   Decimal
  user_id String

  user        User         @relation(fields: [user_id], references: [id])
  Revenue     Revenue[]
  Expenses    Expense[]
  CreditCard  CreditCard[]
  investments Investment[]

  @@map("wallet")
}

model Revenue {
  id            String    @id @default(uuid())
  description   String
  value         Decimal
  is_repeat     Boolean?
  paid          Boolean?
  realease_date DateTime
  due_date      DateTime?
  wallet_id     String
  category_id   String

  wallet   Wallet   @relation(fields: [wallet_id], references: [id])
  category Category @relation(fields: [category_id], references: [id])

  @@map("revenue")
}

model Expense {
  id            String   @id @default(uuid())
  description   String
  value         Decimal
  is_repeat     Boolean?
  paid          Boolean?
  realease_date DateTime
  due_date      DateTime
  wallet_id     String
  category_id   String
  recurrence_id String
  creditCard_id String

  wallet     Wallet     @relation(fields: [wallet_id], references: [id])
  category   Category   @relation(fields: [category_id], references: [id])
  recurrence Recurrence @relation(fields: [recurrence_id], references: [id])
  creditCard CreditCard @relation(fields: [creditCard_id], references: [id])

  @@map("expense")
}

model Category {
  id         String    @id @default(uuid())
  name       String
  color      String
  icons      String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  Expense    Expense[]
  Revenue    Revenue[]

  @@map("category")
}

model Recurrence {
  id          String    @id @default(uuid())
  type        String
  amount      Int?
  Periodicity String?
  Expense     Expense[]

  @@map("recurrence")
}

model CreditCard {
  id          String    @id @default(uuid())
  name        String
  flag        String
  limit       Decimal
  closing_day DateTime
  due_data    DateTime
  is_main     Boolean
  wallet_id   String
  Expense     Expense[]

  wallet Wallet @relation(fields: [wallet_id], references: [id])

  @@map("creditcard")
}

model Investment {
  id           String   @id @default(uuid())
  name         String
  symbol       String
  value        Decimal
  release_Date DateTime
  wallets      Wallet[]

  @@map("investment")
}
